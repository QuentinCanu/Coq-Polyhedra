*lrs:lrslib v.7.1 2020.10.17(64bit,lrslong.h,hybrid arithmetic)
*printcobasis 1
*allbases
V-representation
begin
***** 5 rational
V#1 R#0 B#1 h=0 facets  13 14 15 16 I#8 det= 8 in_det= 8 z= 0 
 1  0  0  0 -1 
V#2 R#0 B#2 h=1 facets  12 14 15 16 I#8 det= 8 in_det= 8 z= 2 
 1  0  0 -1  0 
V#3 R#0 B#3 h=2 facets  11 12 14 15 I#8 det= 8 in_det= 8 z= 2 
 1  0  0 -1  0 
V#4 R#0 B#4 h=3 facets  9 11 12 15 I#8 det= 8 in_det= 8 z= 2 
 1  0  0 -1  0 
V#5 R#0 B#5 h=4 facets  7 9 11 12 I#8 det= 8 in_det= 8 z= 2 
 1  0  0 -1  0 
V#6 R#0 B#6 h=5 facets  6 7 9 12 I#8 det= 8 in_det= 8 z= 8 
 1  0  0  0  1 
V#7 R#0 B#7 h=6 facets  4 6 7 9 I#8 det= 8 in_det= 8 z= 8 
 1  0  0  0  1 
V#8 R#0 B#8 h=7 facets  3 4 6 9 I#8 det= 8 in_det= 8 z= 8 
 1  0  0  0  1 
V#9 R#0 B#9 h=8 facets  2 3 4 6 I#8 det= 8 in_det= 8 z= 8 
 1  0  0  0  1 
V#10 R#0 B#10 h=9 facets  1 2 3 4 I#8 det= 8 in_det= 8 z= 8 
 1  0  0  0  1 
V#11 R#0 B#11 h=7 facets  2 4 6 7 I#8 det= 8 in_det= 8 z= 8 
 1  0  0  0  1 
V#12 R#0 B#12 h=5 facets  4 7 9 11 I#8 det= 8 in_det= 8 z= 2 
 1  0  0 -1  0 
V#13 R#0 B#13 h=3 facets  7 11 12 14 I#8 det= 8 in_det= 8 z= 2 
 1  0  0 -1  0 
V#14 R#0 B#14 h=1 facets  12 13 15 16 I#8 det= 8 in_det= 8 z= 2 
 1  0 -1  0  0 
V#15 R#0 B#15 h=2 facets  10 12 13 15 I#8 det= 8 in_det= 8 z= 2 
 1  0 -1  0  0 
V#16 R#0 B#16 h=3 facets  9 10 12 15 I#8 det= 8 in_det= 8 z= 2 
 1  0 -1  0  0 
V#17 R#0 B#17 h=4 facets  6 9 10 12 I#8 det= 8 in_det= 8 z= 2 
 1  0 -1  0  0 
V#18 R#0 B#18 h=5 facets  3 6 9 10 I#8 det= 8 in_det= 8 z= 2 
 1  0 -1  0  0 
V#19 R#0 B#19 h=3 facets  6 10 12 13 I#8 det= 8 in_det= 8 z= 2 
 1  0 -1  0  0 
V#20 R#0 B#20 h=1 facets  12 13 14 16 I#8 det= 8 in_det= 8 z= 2 
 1 -1  0  0  0 
V#21 R#0 B#21 h=2 facets  8 12 13 14 I#8 det= 8 in_det= 8 z= 2 
 1 -1  0  0  0 
V#22 R#0 B#22 h=3 facets  7 8 12 14 I#8 det= 8 in_det= 8 z= 2 
 1 -1  0  0  0 
V#23 R#0 B#23 h=4 facets  6 7 8 12 I#8 det= 8 in_det= 8 z= 2 
 1 -1  0  0  0 
V#24 R#0 B#24 h=5 facets  2 6 7 8 I#8 det= 8 in_det= 8 z= 2 
 1 -1  0  0  0 
V#25 R#0 B#25 h=3 facets  6 8 12 13 I#8 det= 8 in_det= 8 z= 2 
 1 -1  0  0  0 
V#26 R#0 B#26 h=1 facets  11 13 14 15 I#8 det= 8 in_det= 8 z= 0 
 1  0  0  0 -1 
V#27 R#0 B#27 h=2 facets  10 11 13 15 I#8 det= 8 in_det= 8 z= 0 
 1  0  0  0 -1 
V#28 R#0 B#28 h=3 facets  9 10 11 15 I#8 det= 8 in_det= 8 z= 6 
 1  1  0  0  0 
V#29 R#0 B#29 h=4 facets  5 9 10 11 I#8 det= 8 in_det= 8 z= 6 
 1  1  0  0  0 
V#30 R#0 B#30 h=5 facets  4 5 9 11 I#8 det= 8 in_det= 8 z= 6 
 1  1  0  0  0 
V#31 R#0 B#31 h=6 facets  3 4 5 9 I#8 det= 8 in_det= 8 z= 6 
 1  1  0  0  0 
V#32 R#0 B#32 h=7 facets  1 3 4 5 I#8 det= 8 in_det= 8 z= 6 
 1  1  0  0  0 
V#33 R#0 B#33 h=5 facets  3 5 9 10 I#8 det= 8 in_det= 8 z= 6 
 1  1  0  0  0 
V#34 R#0 B#34 h=3 facets  8 10 11 13 I#8 det= 8 in_det= 8 z= 0 
 1  0  0  0 -1 
V#35 R#0 B#35 h=4 facets  6 8 10 13 I#8 det= 8 in_det= 8 z= 6 
 1  0  0  1  0 
V#36 R#0 B#36 h=5 facets  5 6 8 10 I#8 det= 8 in_det= 8 z= 6 
 1  0  0  1  0 
V#37 R#0 B#37 h=6 facets  3 5 6 10 I#8 det= 8 in_det= 8 z= 6 
 1  0  0  1  0 
V#38 R#0 B#38 h=7 facets  2 3 5 6 I#8 det= 8 in_det= 8 z= 6 
 1  0  0  1  0 
V#39 R#0 B#39 h=8 facets  1 2 3 5 I#8 det= 8 in_det= 8 z= 6 
 1  0  0  1  0 
V#40 R#0 B#40 h=6 facets  2 5 6 8 I#8 det= 8 in_det= 8 z= 6 
 1  0  0  1  0 
V#41 R#0 B#41 h=4 facets  5 8 10 11 I#8 det= 8 in_det= 8 z= 0 
 1  0  0  0 -1 
V#42 R#0 B#42 h=2 facets  8 11 13 14 I#8 det= 8 in_det= 8 z= 0 
 1  0  0  0 -1 
V#43 R#0 B#43 h=3 facets  7 8 11 14 I#8 det= 8 in_det= 8 z= 6 
 1  0  1  0  0 
V#44 R#0 B#44 h=4 facets  5 7 8 11 I#8 det= 8 in_det= 8 z= 6 
 1  0  1  0  0 
V#45 R#0 B#45 h=5 facets  4 5 7 11 I#8 det= 8 in_det= 8 z= 6 
 1  0  1  0  0 
V#46 R#0 B#46 h=6 facets  2 4 5 7 I#8 det= 8 in_det= 8 z= 6 
 1  0  1  0  0 
V#47 R#0 B#47 h=7 facets  1 2 4 5 I#8 det= 8 in_det= 8 z= 6 
 1  0  1  0  0 
V#48 R#0 B#48 h=5 facets  2 5 7 8 I#8 det= 8 in_det= 8 z= 6 
 1  0  1  0  0 
end
*Note! Duplicate vertices/rays may be present
*Totals: vertices=48 rays=0 bases=48 integer_vertices=8 
*Dictionary Cache: max size= 10 misses= 0/47   Tree Depth= 9
*Overflow checking on lrslong arithmetic
*lrs:lrslib v.7.1 2020.10.17(64bit,lrslong.h,hybrid arithmetic)
*0.004u 0.000s 7216Kb 0 flts 0 swaps 0 blks-in 8 blks-out 
